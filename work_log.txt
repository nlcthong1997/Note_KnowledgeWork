######### SSH-KEY #########
### create ssh-key follow mail git: > ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
### get ssh-key: > cat ~/.ssh/id_rsa.pub

######### APACHE2 ##########
### start: > sudo service apache2 start
### restart: > sudo service apache2 restart


######### LINUX ###########
### Cap quyen cho thu file/folder: > sudo chmod -R [777] [/var/www/html]
### Tim 1 chuoi o bat ki dau: grep -ri ["X-Frame-Options"] [/etc/apache2]

############################### SQL ################################
### Dang nhap vao sql: > mysql -u root -p
### Xem Ds database: > show databases;
### Tao database: > create database [databaseName];
### Su dung database: > use [databaseName];
### Import tu file sql: > source [path file database]; (bo dau nhay don '')

############################### Git #######################################
### Tắt addfile trong webroot: > sudo nano .git/config
    Sửa line: filemode = false   
### Cập nhật tất cả thay đổi trên remote: 
    - $ git fetch --all -p
### Chuyển và tạo nhánh mới ở local: 
    - $ git checkout -b [branchName]
### *Đứng tại branch A checkout out ra 1 branch mới -> code ở branch mới là code của branch A    
### Chuyển qua nhánh mới trên origin nhưng dưới local chưa có (thay vì tạo 1 nhánh ở local rồi pull code về)
    - $ git checkout --track origin/[name_branch]
### Lưu lại những thay đổi đang làm vào hàng đợi(vd: đang làm nhưng phải chuyển nhánh, nhưng chưa muốn cmit)
    - $ git stash
### Lấy lại những thay đổi đang làm từ hàng đợi
    - $ git stash pop
### Xóa nhánh dưới local
    - $ git branch -d <name_branch> (nếu fully merged)
    - $ git branch -D <name_branch> (nếu not fully merged)
### Xóa nhánh trên remote
    - $ git push origin --delete <name_branch>     *(chỉ name ko kèm theo origin)
### Update những thay đổi từ nhánh khác về nhánh đang làm
    - $ git merge <name_branch>
### Check các branch hiện tại trên remote và dưới local
	- $ git branch -a
### Quay về trước đó một commit và push khi lỡ push commit sai lên
	- $ git reset --hard HEAD^
	  hoặc
	- $ git reset --hard HEAD~1 (nếu quay về 2 commit: HEAD~2)
	  hoặc
	- $ git reset --hard <commit-id>
	
	- $ git add .
	- $ git commit -m""
	- $ git push -f origin <branch> (ép remote sẽ theo local)
### add hết thây đổi nhưng chừa 1 file nào đó lại
	- $ git add -u
	- $ git reset -- <file>
	
### Config username email
	- $ git config user.name "test"
	- $ git config user.email test@test.com

### Quy trình rebase
	VD: dev là nhánh chính A là nhánh con
	-Ta đang làm việc trên nhánh A và done task.
	1. Push code nhánh A lên (tránh quá trình rebase lỗi thì code A ko mất)
		- git add .
		- git commit -m".."
		- git push
	2. Kéo code từ dev về (có 2 cách)
		2.1 Ta checkout qua nhánh dev và pull code về
			- git checkout dev
			- git pull --rebase
			- git checkout A
			- git rebase dev
		2.2 Ta đứng tại A và pull code từ dev về
			- git pull origin dev --rebase
	3. Fix conflict cho từng commit (ko commit chỉ add)
		3.1 Fix conflict a,b,c,.... và save file a,b,c,...
		3.2 git add a b c ...
		3.3 git rebase --continue
		3.4 Tới commit tiếp theo, nếu ko có conflict thì ta next
			- git rebase --skip
		3.4 Tới commit tiếp theo nếu vẫn còn conflict thì tiếp tục quay lại bước 3.1
	4. Khi fix xong hết tất cả commit ta push code
		- git push -f
	
	* Trong quá trình rebase nếu có lỗi hay vấn đề gì khá, ta có thể hủy rebase, nếu ko chắc abort quay về trạng thái ban đầu
	thì có thể xóa nhánh A dưới local rồi pull về lại nhánh A đã push ở bước 1
		- git rebase --abort
    
####################### Cac lenh commandline tren Ubuntu ##########################
### Thu muc mat dinh Home bat dau bang ki tu: ~
### Cac thu muc he thong bat dau bang ki tu: /
### Chuyen doi thu muc:> cd [path]
### Ve thu muc cha cua thu muc hien tai hoac file hien tai:> cd ..
### Ve thu muc truoc do 1 cap:> cd -

    
######## Queue ############
### Chạy queue: bin/cake queue runworker -q

######################## Cakephp cmd ##############################
### Xóa cache:      bin/cake cache clear_all
###
### Tạo migrate:    bin/cake migrations create migrationsName (viet hoa chu cai dau tien)
### Trang thai migrate:     bin/cake migrations status
### Chay migrate:   bin/cake migrations migrate
### 
### Chạy shell:  bin/cake [className] [function]

bin/cake cache clear_all && bin/cake migrations migrate && bin/cake hd_light syncPrograms 
&& bin/cake hd_light syncContacts 1 DESC && bin/cake hd_light createPromotionLongDate && 
bin/cake hd_light makePromotionAffiliates && bin/cake cache clear_all


########### Cac thao tac voi file migration.php #################
### Rename table 
    $this->table('name_original')
         ->rename('name_new')
         ->update();

### Rename column
    $this->table('categories_items')
        ->renameColumn('item_id', 'partner_item_id')
        ->update();
    
### Create table
    $this->table('name_table')
        ->changeColumn('sort', 'integer', [
            'default' => 0,
            'limit' => 11,
            'null' => false
        ])
        ->addColumn('column_name', 'type', [
            'after' => 'string',  // thêm sau cột nào đó trong DB, (có hoặc ko)
            'default' => null,
            'limit' => 11,
            'null' => true,
            ...
        ])
        ->create();
        
#### Type column


### neu column co type la point, ta can dinh nghia lai type o modle, vi mac dinh la string
protected function _initializeSchema(\Cake\Database\Schema\TableSchema $schema)
    {
        // Map the correct column to the point type
        $schema->columnType('geo_location', 'point');
        $schema->columnType('delivery_geo_location', 'point');
        return $schema;
    }
######################### Cakephp ########################
ORM cơ bản

### Tạo một mới đối tượng và lưu
    $entity = TableRegistry::get('TableName')
        ->newEntity(['fieldName' => $variable,...]);
    TableRegistry::get('TableName')->save($entity);
    
### Update một đối tượng
    $entity = TableRegistry::get('TableName')
        ->find()
        ->where(['fieldName' => $variable,...])
        ->first();
    TableRegistry::get('TableName')->save($entity);  
    
### Xóa một đối tượng
    $entity = TableRegistry::get('TableName')
        ->find()
        ->where(['fieldName' => $variable,...])
        ->first();
    TableRegistry::get('TableName')->delete($entity);    
    
### Xóa tất cả đối tượng
    TableRegistry::get('TableName')->deleteAll(['fieldName' => $variable,...]);
    
### Cac thao tac truy van khac
    TableRegistry::get('TableName')
        ->find()
        ->select('id')
        ->where()
        ->extract('id') // nằm sau where và trả về kết quả là một mạng : [id1, id2, id3]
        ->limit()
        ->order()
        ->count() || ->first() || ->all()
		
##### Group by and Having
	$query = $this->OrderActions->find();
	$query->select(['order_id', 'count' => $query->func()->count('*')])
		->where(['type' => 'Cancel'])
		->group('order_id')
		->having(['count >' => 1])
		->all();
		
###### Transaction
	ini_set('memory_limit', '-1');
	$this->conn = ConnectionManager::get('default');
	$this->conn->transactional(function () use (...variable) { .....code here });
    $this->conn->transactional(function () { .....code here });

### Viet Query thuan
use Cake\Datasource\ConnectionManager;
	$this->conn = ConnectionManager::get('default');
	ini_set('memory_limit', '-1');
    ----------#####--------------
	$queryStr = 'SELECT ';
    $stmt = $this->conn->execute($queryStr);
    return $stmt->fetchAll('assoc'); 
        
### Tat render view trong cac function "post, ajax"
    $this->autoRender = false;
    $this->viewBuilder()->autoLayout(false);
    
### Kiem tra phuong thuc truyen
    vd: $this->request->is('ajax')
    
### Ket qua tra ve nen co dang nay:
    $result = ['message' => 'Success', 'status' => true, 'data' => $data];
    $result = ['message' => null, 'error' => false, 'data' => $data];
    
### Tra ve json cho view khi gui nhan bang ajax
    $this->response->type('json');
    $this->response->body(json_encode($result));
    return $this->response;
    
### Tra ve thong bao cho view bang Flash
    $this->Flash->error(__('message'));
    $this->Flash->success(__('message'));
   
### Truyen du lieu sang view
    $this->set(['variableName' => $variable, ....])
    
    **Tu dong render ten bien trung voi ten du lieu
    $this->set(compact('variable'))

### Su dung: try {} catch () {}
    try {
        ...
    } catch (\Exception $e) {
        return ['message' => $e->getMessage(), 'error' => true, 'data' => false];
    }


### Join table
    + Add relasionship in model Table
        
    Cach 1:
        TableRegistry::get('TableName1')
        ->find()
        ->select([field of TableName1])
        ->where(['fieldName' => $variable,...])
        ->join([
            'table' => 'TableName2',
            'alias' => 'aliasName',
            'fields' => [field of TableName2],
            'conditions' => 'aliasName.fieldName = TableName1.fieldName',
        ]);
    Cach 2:
        vd: join multiple table (long nhau, tbl co mqh voi tbl2 nhung ko co mqh voi tbl3, nhung ta muon ket tbl1 va tbl3 ta dung tbl2 lam trung gian)
        + Model
            TableName1
            $this->hasMany('TableName2');
            
            TableName2
            $this->belongsTo('TableName1');
            $this->hasMany('TableName3');
            
            TableName3
            $this->belongsTo('TableName2');
        
            $query = $this->TableName1
                ->find('all')
                ->contain([
                    'TableName2.TableName3' //long nhau
                ]);

### API Stripe
    Import:
        + use Stripe\Account;
        + use Stripe\Charge;
        + use Stripe\Stripe;
        + use Stripe\Transfer;
    Call:
        + Account::(xem doc)
        + Charge::(xem doc)
        + Stripe::(xem doc)
        + Transfer::(xem doc)
        
### Load component or modelTable
    use [path namespace component]
    use [path namespace model]
    Cach 1:
        * NameComponent, NameTable
        
        + public $components = ['Name1, 'Name2', (*)'NameAlias' => ['className' => 'Name3']];
        + public $uses = array('Name1', 'Name2', ...); //use for tableName models
        (*) Customize lai aliasName: 
               'NameAlias' => ['className' => 'Name']
    Cach 2:
        public function initialize()
        {
            parent::initialize();
            $this->loadModel('Name1');
            $this->loadModel('Name2');
            
            $this->loadComponent('Name3');
        }

### Add new file config
    file_config.php
    #############
    <?php
    return [
        'variable' => ...
    ]
    #############
    trong file config/bootstrap.php
    Load config: Configure::load('nameFile');
    #############
    Configure::read('variable');

### render view Email
    vd:
    $email = new Email();
    $email->to()
        ->sender('platform@babyquip.com', 'BabyQuip Platform Email')
        ->from('platform@babyquip.com', 'BabyQuip')
        ->bcc([])
        ->subject()
        ->emailFormat('html')
        ->template('nameTemplate'])
        ->viewVars(compact('variable'));
    return $email->send();
    
    *->template(dinh-dang-file-name) : view templay la ten file .ctp (path: Template/Email/html/[dinh_dang_file_name].ctp
    *->viewVars() : return data qua view template

### Chuyen huong du lieu
    $this->redirect(string|array $url, integer $status)
        vd:
            $this->redirect(['controller' => 'Orders', 'action' => 'thanks']);
            $this->redirect('/orders/thanks');
            $this->redirect(['action' => 'edit', $id]);
            $this->redirect([
                'controller' => 'Orders',
                'action' => 'confirm',
                '?' => [                    //param tren url
                    'product' => 'pizza',
                    'quantity' => 5
                ],
                '#' => 'top'
            ]);
            
### Pagination
    **function
    $this->paginate = [
        'limit' => 6,
        'order' => [
            'rent_count' => 'desc',
        ],
    ];
    $result = $this->paginate('kết quả sau khi truy vấn');
    // lấy các thông số param trong paging 
    $itemPaginatorParams = $this->Paginator->getPagingParams();
    
    **view
    echo $this->Paginator->prev('');
    echo $this->Paginator->numbers(['separator' => '', 'currentClass' => 'active', 'tag' => 'li', 'url' => 'phần cuối của url đang paging ****']);  vd: url: "abc/edf" => phần cuổi url "edf"
    echo $this->Paginator->next('')

### Render view Ajax và trả về 1 view template ctp
    **bên funciton
    // dữ liệu truyền ra view template
    $this->set(['reviews' => $reviews, 'reviewPagingParams' => $reviewPagingParams]);

    // tắt template và bật ajax
    $this->layout = 'ajax';

    // render
    // Nếu template sử dụng trong plugin thì truyền thêm plugin
    $this->viewBuilder()->setTheme('BabyQuipModern');
    // trả cho hàm ajax view template từ trong Element
    $this->render('/Element/Partners/reviews');
    
    **Bên view ajax như sau
    $.get(url, function (data) {
        $(el).append(data);
        // data là 1 template được render
    });
    
    
    HOAC
     $view = new View();
    $view->layout = false; // if you want to disable layout
    $view->set(['item' => $item, 'itemType' => $itemType, 'url_name' => $tmpPartner->url_name]); // set your variables for view here
    $html .= $view->render('BabiergeModern.Element/Items/listitem', 'ajax');

### Get config tu .env
    Configure::read('nameVariable in .env')
    
####################### PHP ##########################

***array_combine 
$key = ['green', 'red', 'yellow'];
$value = ['avocado', 'apple', 'banana'];
$array = array_combine($key, $value);
=> $array[ [green]=>avocado, [red]=>apple, [yellow]=>banana ];

***strlen

***ham uasort

####################### Library JS ####################

- daterangepicker 
- Amsify Jquery Suggestags (select-apply tag)
- 

###################### JavaScript/Jquery ######################

Get
- $('input[name="nameInput"]')    : input
- $('select[name="nameSelect"]')  : select option

- Check variable underfiled : if (typeof variable !== 'undefined') {}

- Get data-id html  : $(this).data('id');

- Check checked of checkbox: $('input[name=".."]').is(':checked')

- 


####################### NOTE ##########################

***Search-full-text----MYSQL
- SELECT * FROM table WHERE MATCH (column,...) AGAINST ('text-search' IN BOOLEAN MODE);
- (*IN BOOLEAN MODE : tìm kiếm được những cụm từ có khoảng cách mà chứa text-search)
- (*IN NATURAL LANGUAGE MODE: tìm các từ được cung cấp trực tiếp từ text-search)
Full text search no khong giong LIKE
No nhan dang theo word, language lấy theo setting của databse
Do vậy trong db em cần save những từ English đúng chính tả
Nó mới search được
    
    
########################### ACCOUNT ########################
SLACK
work-space-url: babyquip.slack.com
thong.nguyenchi@hdwebsoft.co/F***97

BUG-HERD
thong.nguyenchi@hdwebsoft.co/Password123@

SONAR
thong.nguyenchi/Password123@

EMAIL-HD
thong.nguyenchi@hdwebsoft.co/F***97

ASANA
thong.nguyenchi@hdwebsoft.co/Password123@


############################################################
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





































































































































































































